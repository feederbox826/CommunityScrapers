# yaml-language-server: $schema=../validator/scraper.schema.json
name: RealJamVR
sceneByName:
  action: script
  script:
    - python
    - RealJamVR.py
    - scene-by-name
sceneByQueryFragment:
  action: scrapeXPath
  scraper: sceneScraper
  queryURL: "{url}"
sceneByURL: &byURL
  - action: scrapeXPath
    url:
      - realjamvr.com/scene/
      - porncornvr.com/scene
    scraper: sceneScraper

galleryByURL: *byURL

performerByURL:
  - action: scrapeXPath
    url:
      - porncornvr.com/actor/
      - realjamvr.com/actor/
    scraper: performerScraper

xPathScrapers:
  sceneScraper:
    scene:
      Title: &title
        selector: //h1
        postProcess:
          - replace:
              - regex: ^\s+(.+)\s+$
                with: $1
      URL:
        # incredible amounts of jank
        # scrape the address png with an alt containing the site name, the most consistent between sites
        selector: //img[contains(@src, "address.png")]/@alt | //a[@class='btn btn-m1']/@href
        concat: "|"
        postProcess:
          - replace:
              - regex: (.+)\|.+\?next=(.+)
                with: https://$1.com$2
          - javascript: |
              return value.toLowerCase()
      Date: &date
        selector: //div[@class="specs-icon"]/following-sibling::strong
        postProcess:
          # both date formats are used interchangeably
          # e.g.
          # Jan. 2, 2006
          # January 2, 2006
          # Sept. 2, 2024
          - replace:
              - regex: ([\w]{3})([^\ ]+)?(.*)
                with: $1$3
          - parseDate: Jan 2, 2006
      Performers: &performers
        Name:
          selector: //a[contains(@href, 'actor')][contains(text(), 'VR')]
          postProcess:
            - replace:
              - regex: (.+)\sVR.+
                with: $1
      Tags: &tags
        Name:
          selector: //a[starts-with(@href, "/scenes") and @class="tag"]/text() | //div[not(@class)]/div[@class="specs-icon"]
          postProcess:
            - replace:
                # use the duration "specs-icon" as a fixed value replacement "hack"
                - regex: \d+:\d+:\d+
                  with: Virtual Reality
      Details: &details
        selector: //div[contains(@class, "collapse-content-wrapper")]/div[contains(@class, "collapse-content")]
      Image:
        selector: //*[@id="video-player"]//@poster
      Studio: &studio
        Name:
          selector: //title
          postProcess:
            - replace:
                - regex: '(.*)\| ([^\|]+VR)$'
                  with: $2
    gallery:
      Title: *title
      Date: *date
      Performers: *performers
      Tags: *tags
      Details: *details
      Studio: *studio
  performerScraper:
    performer:
      Name: //h1
      Gender: //div[span[text()="Gender:"]]/text()
      Country:
        selector: //div[span[text()="Birth Place:"]]/text()
        postProcess:
          - replace:
              - regex: .*,
                with: ""
      Birthdate:
        selector: //div[span[text()="Date of Birth:"]]/text()
        postProcess:
          # both date formats are used interchangeably
          - parseDate: Jan. 2, 2006
          - parseDate: January 2, 2006
      Height:
        selector: //div[span[text()="Height:"]]/text()
        postProcess:
          - replace:
              - regex: .*\ (\d+)\ cm.*
                with: $1
      Weight:
        selector: //div[span[text()="Weight:"]]/text()
        postProcess:
          - replace:
              - regex: .*\ (\d+)\ kg.*
                with: $1
      HairColor: //div[span[text()="Hair color:"]]/text()
      EyeColor: //div[span[text()="Eyes color:"]]/text()
      Tags:
        Name: //div[span[text()="Tags:"]]/a/text()
      Image: //div[contains(@class, "actor-view")]//img/@src
      Piercings: //div[span[text()="Piercing:"]]/text()
      Tattoos: //div[span[text()="Tattoo:"]]/text()
# Last Updated Sept 25, 2025
